#!/usr/bin/env python3
"""DonutBuffer CI/CD Monitoring with Cursor Agent"""

import subprocess
import sys
import os
from datetime import datetime

def run_cursor_query(query):
    """Run Cursor Agent query with error handling."""
    try:
        result = subprocess.run(
            ["cursor-agent", "--print", "--output-format", "text", query],
            capture_output=True,
            text=True,
            timeout=60
        )
        return result.stdout if result.returncode == 0 else f"Error: {result.stderr}"
    except subprocess.TimeoutExpired:
        return "Error: Timeout"
    except Exception as e:
        return f"Error: {e}"

def main():
    repo = "DonutBuffer"  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –ø–æ–ª–Ω—ã–π –ø—É—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    
    print("üöÄ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ CI/CD –¥–ª—è DonutBuffer")
    print(f"–í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 50)
    
    # Check failed workflows
    print("\nüîç –£–ø–∞–≤—à–∏–µ workflow –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞:")
    print("-" * 40)
    failed_query = f"–ù–∞–π–¥–∏ –≤—Å–µ failed GitHub Actions workflow runs –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 24 —á–∞—Å–∞ –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ {repo} –∏ –¥–∞–π –∫—Ä–∞—Ç–∫–∏–π –∞–Ω–∞–ª–∏–∑ –ø—Ä–∏—á–∏–Ω"
    print(run_cursor_query(failed_query))
    
    # Check PR status
    print("\nüîç –°—Ç–∞—Ç—É—Å Pull Requests:")
    print("-" * 40)
    pr_query = f"–ü–æ–∫–∞–∂–∏ –≤—Å–µ open pull requests –≤ {repo} —Å –∏—Ö —Å—Ç–∞—Ç—É—Å–æ–º –ø—Ä–æ–≤–µ—Ä–æ–∫ –∏ –≤–æ–∑–º–æ–∂–Ω—ã–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏"
    print(run_cursor_query(pr_query))
    
    # Performance analysis
    print("\nüîç –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤:")
    print("-" * 40)
    perf_query = f"–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö GitHub Actions –¥–ª—è {repo} –∏ –ø—Ä–µ–¥–ª–æ–∂–∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏"
    print(run_cursor_query(perf_query))
    
    print("\n‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω!")

if __name__ == "__main__":
    main()
