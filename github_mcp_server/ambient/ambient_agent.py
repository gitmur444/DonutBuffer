"""
ü§ñ Ambient Agent - –ì–ª–∞–≤–Ω—ã–π orchestrator

–°–≤—è–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã: –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, —Å–æ–±—ã—Ç–∏—è, –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–æ–º–ø—Ç–æ–≤ –∏ –∏–Ω–∂–µ–∫—Ü–∏—é.
"""

import time
import signal
import sys
from pathlib import Path
from typing import Optional

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø–∞–∫–µ—Ç–∞
sys.path.append(str(Path(__file__).parent.parent))
from core import BaseWizard
from env_manager import EnvManager

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º ambient –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
from .event_system import EventSystem, Event, EventType
from .github_monitor import GitHubMonitor
from .prompt_generator import PromptGenerator
from .agent_injector import AgentInjector
from .event_handlers import EventHandlers

class AmbientAgent(BaseWizard):
    """–ì–ª–∞–≤–Ω—ã–π ambient agent –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞"""
    
    def __init__(self, donut_dir: Path, install_signal_handlers: bool = True):
        self.donut_dir = donut_dir
        self.running = False
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        self.env_manager = EnvManager(donut_dir)
        self.env_manager.load_env_file()
        
        self.event_system = EventSystem()
        self.github_monitor = GitHubMonitor(self.event_system, self.env_manager)
        self.prompt_generator = PromptGenerator()
        self.agent_injector = AgentInjector()
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        self.event_handlers = EventHandlers(self.prompt_generator, self.agent_injector)
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        self.setup_event_handlers()
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        if install_signal_handlers:
            signal.signal(signal.SIGINT, self.signal_handler)
            signal.signal(signal.SIGTERM, self.signal_handler)
    
    def setup_event_handlers(self) -> None:
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π"""
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        self.event_system.register_handler(EventType.GITHUB_WORKFLOW_EVENT, self.event_handlers.handle_workflow_event)
        self.event_system.register_handler(EventType.GITHUB_PR_CREATED, self.event_handlers.handle_pr_created)
        self.event_system.register_handler(EventType.MANUAL_TRIGGER, self.event_handlers.handle_manual_trigger)
        self.event_system.register_handler(EventType.SYSTEM_TEST, self.event_handlers.handle_system_test)
        self.event_system.register_handler(EventType.GITHUB_ISSUE_TEST, self.event_handlers.handle_test_issue)

    
    def start(self) -> None:
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç ambient agent"""
        self.print_info("ü§ñ –ó–∞–ø—É—Å–∫–∞—é DonutBuffer Ambient Agent...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å
        if not self.pre_flight_check():
            return
        
        self.running = True
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É —Å–æ–±—ã—Ç–∏–π
        self.event_system.start_processing()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ GitHub
        if self.github_monitor.start_monitoring():
            self.print_success("üîç GitHub –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω")
        else:
            self.print_warning("‚ö†Ô∏è GitHub –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ –∑–∞–ø—É—â–µ–Ω (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω)")
        
        self.print_success("ü§ñ Ambient Agent –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ")
        self.print_info("üí° –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        try:
            self.main_loop()
        except KeyboardInterrupt:
            self.print_info("\n‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        finally:
            self.stop()
    
    def pre_flight_check(self) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –∫ –∑–∞–ø—É—Å–∫—É"""
        all_good = True
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º cursor-agent
        if not self.agent_injector.check_cursor_agent_availability():
            self.print_warning("‚ö†Ô∏è cursor-agent –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω")
            all_good = False
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º GitHub —Ç–æ–∫–µ–Ω  
        github_token = self.env_manager.get_env_var("GITHUB_TOKEN")
        if not github_token:
            self.print_warning("‚ö†Ô∏è GitHub —Ç–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω")
            all_good = False
        

        
        if all_good:
            self.print_success("‚úÖ Pre-flight –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞")
        else:
            self.print_error("‚ùå Pre-flight –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞")
            self.print_info("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./wizard –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        return all_good
    
    def main_loop(self) -> None:
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ambient agent"""
        while self.running:
            try:
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
                self.show_status()
                
                # –û–∂–∏–¥–∞–µ–º
                time.sleep(300)  # 5 –º–∏–Ω—É—Ç
                
            except Exception as e:
                self.print_error(f"–û—à–∏–±–∫–∞ –≤ main loop: {e}")
                time.sleep(60)
    
    def show_status(self) -> None:
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã"""
        pending_events = self.event_system.get_pending_events_count()
        
        self.print_info(f"üìä –°—Ç–∞—Ç—É—Å Ambient Agent:")
        self.print_info(f"   ‚Ä¢ –°–æ–±—ã—Ç–∏—è –≤ –æ—á–µ—Ä–µ–¥–∏: {pending_events}")
        self.print_info(f"   ‚Ä¢ GitHub –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: {'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' if self.github_monitor.monitoring else 'üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        self.print_info(f"   ‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {self.get_uptime()}")
    
    def get_uptime(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã"""
        if hasattr(self, 'start_time'):
            uptime_seconds = time.time() - self.start_time
            hours = int(uptime_seconds // 3600)
            minutes = int((uptime_seconds % 3600) // 60)
            return f"{hours}—á {minutes}–º"
        return "0–º"
    
    def stop(self) -> None:
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ambient agent"""
        self.print_info("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Ambient Agent...")
        
        self.running = False
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        self.github_monitor.stop_monitoring()
        self.event_system.stop_processing()
        
        self.print_success("ü§ñ Ambient Agent –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    def signal_handler(self, signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown"""
        self.print_info(f"\nüì° –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}")
        self.running = False
    
    def trigger_manual_analysis(self, analysis_type: str, content: str) -> None:
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ä—É—á–Ω–æ–π –∞–Ω–∞–ª–∏–∑"""
        
        self.event_system.emit_simple(
            event_type=EventType.MANUAL_TRIGGER,
            data={
                "type": analysis_type,
                "content": content
            },
            source="manual",
            priority=3
        )
        
        self.print_success(f"üéØ –ó–∞–ø—É—â–µ–Ω —Ä—É—á–Ω–æ–π –∞–Ω–∞–ª–∏–∑: {analysis_type}")
    
    def test_event_system(self) -> bool:
        """
        E2E —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã —Å–æ–±—ã—Ç–∏–π —á–µ—Ä–µ–∑ GitHub Issues API
        
        Returns:
            bool: True –µ—Å–ª–∏ —Å–∏—Å—Ç–µ–º–∞ —Å–æ–±—ã—Ç–∏–π —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (fail-fast)
        """
        try:
            # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π issue
            issue = self.github_monitor.create_test_issue()
            issue_number = issue['number']
            
            # 2. –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥ –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É
            self.event_handlers.test_event_processed = False
            self.event_system.start_processing()
            
            # 3. –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–±—ã—Ç–∏—è
            self.github_monitor.force_check(issue_number)
            
            pending_count = self.event_system.get_pending_events_count()
            if pending_count > 0:
                for _ in range(pending_count):
                    if self.event_system.event_queue:
                        event = self.event_system.event_queue.pop(0)
                        self.event_system.process_event(event)
            
            # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if self.event_handlers.test_event_processed:
                result = True
            else:
                self.print_error("‚ùå E2E —Ç–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω: —Å–æ–±—ã—Ç–∏–µ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
                result = False
            
            # 5. Cleanup
            self.github_monitor.delete_test_issue(issue_number)
            
            return result
            
        except Exception as e:
            self.print_error(f"‚ùå E2E —Ç–µ—Å—Ç –ø—Ä–æ–≤–∞–ª–µ–Ω —Å –æ—à–∏–±–∫–æ–π: {e}")
            return False

if __name__ == "__main__":
    # –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    donut_dir = Path.cwd()
    if donut_dir.name == "ambient":
        donut_dir = donut_dir.parent.parent
    
    agent = AmbientAgent(donut_dir)
    agent.start() 