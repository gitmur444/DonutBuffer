"""
ü§ñ Ambient Agent - –ì–ª–∞–≤–Ω—ã–π orchestrator

–°–≤—è–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã: –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥, —Å–æ–±—ã—Ç–∏—è, –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ø—Ä–æ–º–ø—Ç–æ–≤ –∏ –∏–Ω–∂–µ–∫—Ü–∏—é.
"""

import time
import signal
import sys
from pathlib import Path
from typing import Optional

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏–∑ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø–∞–∫–µ—Ç–∞
sys.path.append(str(Path(__file__).parent.parent))
from ..core.base_wizard import BaseWizard
from ..core.env_manager import EnvManager

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º ambient –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
from .event_system import EventSystem, Event, EventType
from .github_monitor import GitHubMonitor
from .prompt_generator import PromptGenerator
from .agent_injector import AgentInjector
from .event_handlers import EventHandlers

class AmbientAgent(BaseWizard):
    """–ì–ª–∞–≤–Ω—ã–π ambient agent –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞"""
    
    def __init__(self, donut_dir: Path, install_signal_handlers: bool = True):
        self.donut_dir = donut_dir
        self.running = False
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        self.env_manager = EnvManager(donut_dir)
        self.env_manager.load_env_file()
        
        self.event_system = EventSystem()
        self.github_monitor = GitHubMonitor(self.event_system, self.env_manager)
        self.prompt_generator = PromptGenerator()
        self.agent_injector = AgentInjector()
        
        # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        self.event_handlers = EventHandlers(self.prompt_generator, self.agent_injector)
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        self.setup_event_handlers()
        
        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        if install_signal_handlers:
            signal.signal(signal.SIGINT, self.signal_handler)
            signal.signal(signal.SIGTERM, self.signal_handler)
    
    def setup_event_handlers(self) -> None:
        """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π"""
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        self.event_system.register_handler(EventType.GITHUB_WORKFLOW_EVENT, self.event_handlers.handle_workflow_event)
        self.event_system.register_handler(EventType.GITHUB_PR_CREATED, self.event_handlers.handle_pr_created)
        self.event_system.register_handler(EventType.MANUAL_TRIGGER, self.event_handlers.handle_manual_trigger)
        self.event_system.register_handler(EventType.SYSTEM_TEST, self.event_handlers.handle_system_test)
        self.event_system.register_handler(EventType.GITHUB_ISSUE_TEST, self.event_handlers.handle_test_issue)

    
    def start(self) -> None:
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç ambient agent"""
        self.print_info("ü§ñ –ó–∞–ø—É—Å–∫–∞—é DonutBuffer Ambient Agent...")
        
        # –ü—Ä–µ—Ñ–ª–∞–π—Ç-–ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ ./wizard —á–µ—Ä–µ–∑ tests/preflight/runner
        
        self.running = True
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∏—Å—Ç–µ–º—É —Å–æ–±—ã—Ç–∏–π
        self.print_info("[ambient] starting event system")
        self.event_system.start_processing()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ GitHub
        self.print_info("[ambient] starting GitHub monitor")
        if self.github_monitor.start_monitoring():
            self.print_success("üîç GitHub –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∞–∫—Ç–∏–≤–µ–Ω")
        else:
            self.print_warning("‚ö†Ô∏è GitHub –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –Ω–µ –∑–∞–ø—É—â–µ–Ω (–ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω)")
        
        self.print_success("ü§ñ Ambient Agent –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–µ")
        self.print_info("üí° –ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        try:
            self.main_loop()
        except KeyboardInterrupt:
            self.print_info("\n‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        finally:
            self.stop()
    
    # –ü—Ä–µ—Ñ–ª–∞–π—Ç-–ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞ –≤ tests/preflight/runner.py
    
    def main_loop(self) -> None:
        """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ambient agent"""
        while self.running:
            try:                
                # –û–∂–∏–¥–∞–µ–º
                time.sleep(300)  # 5 –º–∏–Ω—É—Ç
                
            except Exception as e:
                self.print_error(f"–û—à–∏–±–∫–∞ –≤ main loop: {e}")
                time.sleep(60)
    
    def get_uptime(self) -> str:
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã"""
        if hasattr(self, 'start_time'):
            uptime_seconds = time.time() - self.start_time
            hours = int(uptime_seconds // 3600)
            minutes = int((uptime_seconds % 3600) // 60)
            return f"{hours}—á {minutes}–º"
        return "0–º"
    
    def stop(self) -> None:
        """–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç ambient agent"""
        self.print_info("üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é Ambient Agent...")
        
        self.running = False
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        self.github_monitor.stop_monitoring()
        self.event_system.stop_processing()
        
        self.print_success("ü§ñ Ambient Agent –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    
    def signal_handler(self, signum, frame):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown"""
        self.print_info(f"\nüì° –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}")
        self.running = False
    
    def trigger_manual_analysis(self, analysis_type: str, content: str) -> None:
        """–ó–∞–ø—É—Å–∫–∞–µ—Ç —Ä—É—á–Ω–æ–π –∞–Ω–∞–ª–∏–∑"""
        
        self.event_system.emit_simple(
            event_type=EventType.MANUAL_TRIGGER,
            data={
                "type": analysis_type,
                "content": content
            },
            source="manual",
            priority=3
        )
        
        self.print_success(f"üéØ –ó–∞–ø—É—â–µ–Ω —Ä—É—á–Ω–æ–π –∞–Ω–∞–ª–∏–∑: {analysis_type}")
    
    # E2E –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–Ω–µ—Å–µ–Ω–∞ –≤ tests/preflight/check_ambient.py

if __name__ == "__main__":
    # –ü—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –∑–∞–ø—É—Å–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    donut_dir = Path.cwd()
    if donut_dir.name == "ambient":
        donut_dir = donut_dir.parent.parent
    
    agent = AmbientAgent(donut_dir)
    agent.start() 